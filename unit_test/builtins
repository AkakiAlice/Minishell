echo hello world
echo "hello world"
echo 'hello world'
echo hello'world'
echo hello""world
echo ''
echo "$PWD"
echo '$PWD'
echo "aspas ->'"
echo "aspas -> ' "
echo 'aspas ->"'
echo 'aspas -> " '
echo "> >> < * ? [ ] | ; [ ] || && ( ) & # $ \ <<"
echo '> >> < * ? [ ] | ; [ ] || && ( ) & # $ \ <<'
echo "exit_code ->$? user ->$USER home -> $HOME"
echo 'exit_code ->$? user ->$USER home -> $HOME'
echo "$"
echo '$'
echo $
echo $?
echo $?HELLO
pwd
pwd oi
export
'export'
"export"
'export   '
'    export   '
'    export'
export STATUS="success"
export STATUS="'alert'"
export HELLO=123
export HELLO=456
export EMPTY=""
export hello
export hello="42"
export =
export ==
export ==A=B=
export VAR-
export 1_VAR
export 123
export VAR2=
export =VAR3
export HELLO="123 A-"
export VAR-=123
export 1_VAR=09
export HELLO-=123
export hello world
export HELLO=123 A
export VAR1 = VAR2
export VAR3= VAR4
export VAR5 =VAR6
'export QUOTES=single'
"export QUOTES=double"
'"export" QUOTES=double'
export 'QUOTES'
export "QUOTES"
export 'QUOTES=single'
export "QUOTES=single"
export EQUAL'='single
export EQUAL2"="double
export QUOTES_S'=single'
export QUOTES_D"=single"
export 'QUOTES_N'='double'
export "QUOTES_M"="double"
export < unit_test/test_files/infile_big
export INPUT < unit_test/test_files/infile_big
export $USER
export < input_file
export << eof
export NOT_INPUT < not-exists
export OUT > file
export HERE << eof
export append >> file
export > output
export >> output
export PIPE | ls
export PIPE | export CHILD
cat | export CHILD

export SIGN_D="> >> < * ? [ ] | ; [ ] || && ( ) & # $ $USER \ <<"
export SIGN_S='> >> < * ? [ ] | ; [ ] || && ( ) & # $ $USER \ <<'
export NAME=$USER

unset
unset HELLO
unset HELLO1 HELLO2
unset HOME
unset PATH
unset SHELL

cd $PWD
cd $PWD hi
cd 123123
exit 123
exit 298
exit +100
exit "+100"
exit +"100"
exit -100
exit "-100"
exit -"100"
exit hello
exit 42 world
exit 9223372036854775807
exit 9223372036854775808
exit -9223372036854775807
exit -9223372036854775808
exit -9223372036854775809


env
env > outfile
env >> outfile
env < inputfile
env << eof
env A
env A B
